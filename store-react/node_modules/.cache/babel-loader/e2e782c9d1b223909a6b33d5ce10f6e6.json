{"ast":null,"code":"import _regeneratorRuntime from \"/Users/marthasikwese/Store/store-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/marthasikwese/Store/store-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n// this file contains actions\n// actions are a React terminology\n// it refers to functions that trigger changes to the store\n// actions can contain normal code but must return an object\n// this object contains the type of action and any data it delivers\n// please refer to https://redux.js.org/basics/actions\n// axios is a library that allows us to make asynchronous requests\n// in this case it is being used to make async HTTP requests\nimport axios from 'axios';\nexport function setCurrentUser(payload) {\n  return {\n    type: 'SET_CURRENT_USER',\n    payload: payload\n  };\n}\nexport function setAuthorizationToken(payload) {\n  return {\n    type: 'SET_AUTH_TOKEN',\n    payload: payload\n  };\n}\nexport function addCartItem(payload) {\n  return {\n    type: 'ADD_CART_ITEM',\n    payload: payload\n  };\n}\nexport function checkoutRequest() {\n  return {\n    type: 'CHECKOUT_REQUEST'\n  };\n}\nexport function checkoutComplete() {\n  return {\n    type: 'CHECKOUT_COMPLETE'\n  };\n}\nexport function checkoutFailed() {\n  return {\n    type: 'CHECKOUT_FAILED'\n  };\n}\nexport function checkout(payload) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch(checkoutRequest());\n                _context.prev = 1;\n                _context.next = 4;\n                return axios.post('http://localhost:3001/purchases', payload);\n\n              case 4:\n                response = _context.sent;\n                return _context.abrupt(\"return\", response.status === 204 ? dispatch(checkoutComplete()) : dispatch(checkoutFailed()));\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](1);\n                console.error(_context.t0.message);\n                dispatch(checkoutFailed());\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 8]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}\nexport function logout() {\n  return {\n    type: 'LOGOUT'\n  };\n}","map":{"version":3,"sources":["/Users/marthasikwese/Store/store-react/src/actions/index.js"],"names":["axios","setCurrentUser","payload","type","setAuthorizationToken","addCartItem","checkoutRequest","checkoutComplete","checkoutFailed","checkout","dispatch","post","response","status","console","error","message","logout"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,cAAT,CAAyBC,OAAzB,EAAkC;AACvC,SAAO;AAAEC,IAAAA,IAAI,EAAE,kBAAR;AAA4BD,IAAAA,OAAO,EAAPA;AAA5B,GAAP;AACD;AAED,OAAO,SAASE,qBAAT,CAAgCF,OAAhC,EAAyC;AAC9C,SAAO;AAAEC,IAAAA,IAAI,EAAE,gBAAR;AAA0BD,IAAAA,OAAO,EAAPA;AAA1B,GAAP;AACD;AAED,OAAO,SAASG,WAAT,CAAsBH,OAAtB,EAA+B;AACpC,SAAO;AAAEC,IAAAA,IAAI,EAAE,eAAR;AAAyBD,IAAAA,OAAO,EAAPA;AAAzB,GAAP;AACD;AAED,OAAO,SAASI,eAAT,GAA4B;AACjC,SAAO;AAAEH,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD;AAED,OAAO,SAASI,gBAAT,GAA6B;AAClC,SAAO;AAAEJ,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD;AAED,OAAO,SAASK,cAAT,GAA2B;AAChC,SAAO;AAAEL,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD;AAED,OAAO,SAASM,QAAT,CAAmBP,OAAnB,EAA4B;AACjC;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAMQ,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACLA,gBAAAA,QAAQ,CAACJ,eAAe,EAAhB,CAAR;AADK;AAAA;AAAA,uBAGoBN,KAAK,CAACW,IAAN,CAAW,iCAAX,EAA8CT,OAA9C,CAHpB;;AAAA;AAGGU,gBAAAA,QAHH;AAAA,iDAIKA,QAAQ,CAACC,MAAT,KAAoB,GAArB,GAA4BH,QAAQ,CAACH,gBAAgB,EAAjB,CAApC,GAA2DG,QAAQ,CAACF,cAAc,EAAf,CAJvE;;AAAA;AAAA;AAAA;AAMHM,gBAAAA,OAAO,CAACC,KAAR,CAAc,YAAEC,OAAhB;AACAN,gBAAAA,QAAQ,CAACF,cAAc,EAAf,CAAR;;AAPG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAUD;AAED,OAAO,SAASS,MAAT,GAAmB;AACxB,SAAO;AAAEd,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD","sourcesContent":["// this file contains actions\n// actions are a React terminology\n// it refers to functions that trigger changes to the store\n// actions can contain normal code but must return an object\n// this object contains the type of action and any data it delivers\n// please refer to https://redux.js.org/basics/actions\n\n// axios is a library that allows us to make asynchronous requests\n// in this case it is being used to make async HTTP requests\nimport axios from 'axios'\n\nexport function setCurrentUser (payload) {\n  return { type: 'SET_CURRENT_USER', payload }\n}\n\nexport function setAuthorizationToken (payload) {\n  return { type: 'SET_AUTH_TOKEN', payload }\n}\n\nexport function addCartItem (payload) {\n  return { type: 'ADD_CART_ITEM', payload }\n}\n\nexport function checkoutRequest () {\n  return { type: 'CHECKOUT_REQUEST' }\n}\n\nexport function checkoutComplete () {\n  return { type: 'CHECKOUT_COMPLETE' }\n}\n\nexport function checkoutFailed () {\n  return { type: 'CHECKOUT_FAILED' }\n}\n\nexport function checkout (payload) {\n  return async dispatch => {\n    dispatch(checkoutRequest())\n    try {\n      const response = await axios.post('http://localhost:3001/purchases', payload)\n      return (response.status === 204) ? dispatch(checkoutComplete()) : dispatch(checkoutFailed())\n    } catch (e) {\n      console.error(e.message)\n      dispatch(checkoutFailed())\n    }\n  }\n}\n\nexport function logout () {\n  return { type: 'LOGOUT' }\n}"]},"metadata":{},"sourceType":"module"}